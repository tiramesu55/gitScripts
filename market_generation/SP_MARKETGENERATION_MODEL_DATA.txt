-- create or replace TABLE E_SANDBOX.SILVER.MARKET_GENERATION (
-- 	DATA_TAG_ID NUMBER(38,0) NOT NULL,
-- 	ZONE_ID NUMBER(38,0) NOT NULL,
-- 	DT_UTC TIMESTAMP_NTZ(9) NOT NULL,
-- 	UNIT_TYPE VARCHAR(50) NOT NULL,
-- 	DT_LOCAL TIMESTAMP_NTZ(9) NOT NULL,
-- 	PERIOD VARCHAR(20),
-- 	GENERATION FLOAT,
-- 	EMS_CO2 FLOAT,
-- 	EMS_NOX FLOAT,
-- 	EMS_SO2 FLOAT,
-- 	CAPACITY_FACTOR FLOAT,
-- 	primary key (DATA_TAG_ID, ZONE_ID, DT_UTC, UNIT_TYPE)
-- );

--before releasing E_SANDBOX.BRONZE.MARKET_GENERATION_SASHA to E_SANDBOX.BRONZE.MARKET_GENERATION
-- and E_SANDBOX.SILVER.MARKET_GENERATION  to  E_SANDBOX.MODEL_DATA.MARKET_GENERATION 

CREATE OR REPLACE PROCEDURE E_SANDBOX.SILVER.SP_MARKETGENERATION_MODEL_DATA(DATA_TAG_ID integer)
RETURNS INTEGER
LANGUAGE SQL
EXECUTE AS OWNER
AS
$$

DECLARE
    v_local_tz VARCHAR;
    v_behind_utc VARCHAR;
    rows_inserted INTEGER;
    market_id integer;
BEGIN
SELECT LOCAL_TZ, behind_utc,market_id
    INTO  :v_local_tz,:v_behind_utc, :market_id
    FROM E_SANDBOX.SILVER.DATA_TAG_KEY
    WHERE DATA_TAG_ID =  :DATA_TAG_ID 
    LIMIT 1;
INSERT INTO E_SANDBOX.MODEL_DATA.MARKET_GENERATION 
SELECT
    src.DATA_TAG_ID,
   -- src.ZONE,
    ref.ZONE_ID as ZONE_ID,  
    DATEADD(HOUR, :v_behind_utc, TRY_TO_TIMESTAMP(src.DT_ENELYTIX, 'YYYY-MM-DD HH24:MI:SS')) AS DT_UTC,
    src.UNIT_TYPE,
    TRY_TO_TIMESTAMP(src.DT_ENELYTIX, 'YYYY-MM-DD HH24:MI:SS') AS DT_LOCAL,
    src.PERIOD,
    src.GENERATION,
    src.EMS_CO2,
    src.EMS_NOX,
    src.EMS_SO2,
    CASE
        WHEN src.CAP  IS NULL OR src.CAP =0 THEN NULL
        ELSE src.GENERATION / src.CAP
        END AS CAPACITY_FACTOR
     
FROM E_SANDBOX.BRONZE.MARKET_GENERATION src
INNER JOIN ( SELECT  ZONE_ID, ZONE FROM E_SANDBOX.MODEL_DATA.ZONE_ID where MARKET_ID = :market_id  ) as ref   
ON src.ZONE = ref.ZONE
WHERE src.DATA_TAG_ID  = :DATA_TAG_ID;

rows_inserted := SQLROWCOUNT;

UPDATE E_SANDBOX.MODEL_DATA.MARKET_GENERATION ----- 
SET DT_LOCAL = CONVERT_TIMEZONE('UTC', :v_local_tz, DT_UTC)
where DATA_TAG_ID = :DATA_TAG_ID ;

RETURN  rows_inserted;
END;
$$;


--CALL E_SANDBOX.SILVER.SP_MARKETGENERATION_MODEL_DATA( 7);
--DELETE FROM E_SANDBOX.MODEL_DATA.MARKET_GENERATION where data_tag_id = 7