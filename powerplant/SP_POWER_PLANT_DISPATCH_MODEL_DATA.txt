--truncate table E_SANDBOX.MODEL_DATA.POWER_PLANT_DISPATCH;
CREATE OR REPLACE PROCEDURE E_SANDBOX.SILVER.SP_POWER_PLANT_DISPATCH_MODEL_DATA( DATA_TAG_ID INTEGER)
RETURNS INTEGER
LANGUAGE SQL
EXECUTE AS OWNER
AS
$$
DECLARE

  rows_inserted INTEGER;
BEGIN
INSERT INTO E_SANDBOX.MODEL_DATA.POWER_PLANT_DISPATCH

SELECT

    DATA_TAG_ID,
	CYCLE,
	POWER_PLANT_ID,
	 DT_UTC,
     DT_LOCAL,
	PERIOD,
	CASE WHEN SUM(GENERATION) != 0 THEN SUM(GENERATION * LMP) / SUM(GENERATION) 
         ELSE AVG(LMP)
    END
    AS LMP_WAVERAGE,
	null as LMP_ENERGY_WAVERAGE,
	null as LMP_CONGESTION_WAVERAGE,
	null as LMP_LOSS_WAVERAGE,
	CASE WHEN SUM(GENERATION) != 0 THEN SUM(CARBON_DISPLACEMENT) / SUM(GENERATION)
         ELSE AVG(MER)
    END
    AS MER_WAVERAGE,
	SUM(GENERATION) AS GENERATION_SUM,
	SUM(MAX_MW) AS MAX_MW_SUM,
	SUM(CURTAILMENT) AS CURTAILMENT_SUM,
	SUM(CARBON_DISPLACEMENT) AS CARBON_DISPLACEMENT_SUM,
	SUM(TOTAL_COST) AS TOTAL_COST,
	SUM(VOM_COST) AS VOM_COST_SUM,
	SUM(FUEL_COST) AS FUEL_COST_SUM,
	SUM(EMISSIONS_COST) AS EMISSIONS_COST_SUM,
	SUM(SUBSIDY) AS SUBSIDY_SUM,
	SUM(REC_REVENUE) AS REC_REVENUE_SUM,
	SUM(ANCILLARY_SERVICES_REVENUE) AS ANCILLARY_SERVICES_REVENUE_SUM,
	SUM(BIOMASS) AS BIOMASS_SUM,
	SUM(COAL) AS COAL_SUM,
	SUM(FUEL_OIL) AS FUEL_OIL_SUM,
	SUM(NATURAL_GAS) AS NATURAL_GAS_SUM,
	SUM(REFUSE) AS REFUSE_SUM,
	SUM(URANIUM) AS URANIUM_SUM,
	SUM(BIOMASS_COST) AS BIOMASS_COST_SUM,
	SUM(COAL_COST) AS COAL_COST_SUM,
	SUM(FUEL_OIL_COST) AS FUEL_OIL_COST_SUM,
	SUM(NATURAL_GAS_COST) AS NATURAL_GAS_COST_SUM,
	SUM(REFUSE_COST) AS REFUSE_COST_SUM,
	SUM(URANIUM_COST) AS URANIUM_COST_SUM,
	SUM(EMS_CO2) AS EMS_CO2_SUM,
	SUM(EMS_NOX) AS EMS_NOX_SUM,
	SUM(EMS_SO2) AS EMS_SO2_SUM,
	SUM(COST_CO2) AS COST_CO2_SUM,
	SUM(COST_NOX) AS COST_NOX_SUM,
	SUM(COST_SO2) AS COST_SO2_SUM,
	SUM(REGUP) AS REGUP_SUM,
	SUM(REGDOWN) AS REGDOWN_SUM,
	SUM(SPIN) AS SPIN_SUM,
	SUM(SUPP) AS SUPP_SUM,
	SUM(NONSPIN) AS NONSPIN_SUM,
	SUM(RAMPUP) AS RAMPUP_SUM,
	SUM(RAMPDOWN) AS RAMPDOWN_SUM,
	SUM(REGUP_REVENUE) AS REGUP_REVENUE_SUM,
	SUM(REGDOWN_REVENUE) AS REGDOWN_REVENUE_SUM,
	SUM(SPIN_REVENUE) AS SPIN_REVENUE_SUM,
	SUM(SUPP_REVENUE) AS SUPP_REVENUE_SUM,
	SUM(NONSPIN_REVENUE) AS NONSPIN_REVENUE_SUM,
	SUM(RAMPUP_REVENUE) AS RAMPUP_REVENUE_SUM,
	SUM(RAMPDOWN_REVENUE) AS RAMPDOWN_REVENUE_SUM,
    SUM(CAP) as CAPACITY

FROM E_SANDBOX.MODEL_DATA.INJ_DISPATCH where DATA_TAG_ID = :DATA_TAG_ID
GROUP BY DATA_TAG_ID, CYCLE, POWER_PLANT_ID,    DT_UTC,  DT_LOCAL,  PERIOD;

   rows_inserted := SQLROWCOUNT;
   RETURN  rows_inserted;
END;
$$;
--CALL  E_SANDBOX.SILVER.SP_POWER_PLANT_DISPATCH_MODEL_DATA(4);